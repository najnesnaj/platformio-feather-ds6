
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <ds6_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, PIN_SPI_MOSI, PIN_SPI_SCK, OLED_DC, OLED_RST, OLED_CS);
int i;

/* HRM Service Definitions
 * Heart Rate Monitor Service:  0x180D
 * Heart Rate Measurement Char: 0x2A37
 * Body Sensor Location Char:   0x2A38
 */





void setup()
{
	//	pinMode(PIN_VIBRATE, OUTPUT);
	//		pinMode(21, OUTPUT);
	//		digitalWrite(21, 1);
	Serial.begin(38400); //to comply with the standard settings DFU
	Serial.println(__FILE__);


	if(!display.begin(SSD1306_SWITCHCAPVCC)) {
		Serial.println("SSD1306 allocation failed");
	}
	else
		Serial.println("SSD1306 allocation worked!");


	Serial.println("Initialise the Bluefruit nRF52 module");

	//	Bluefruit.begin();



	// Set the advertised device name (keep it short!)

	Serial.println("Setting Device Name to 'Feather52 HRM'");

	//	Bluefruit.setName("Bluefruit52 HRM");



	// Set the connect/disconnect callback handlers

	//	Bluefruit.Periph.setConnectCallback(connect_callback);

	//	Bluefruit.Periph.setDisconnectCallback(disconnect_callback);



	// Configure and Start the Device Information Service

	Serial.println("Configuring the Device Information Service");

	//	bledis.setManufacturer("Adafruit Industries");

	//	bledis.setModel("Bluefruit Feather52");

	//	bledis.begin();



	// Start the BLE Battery Service and set it to 100%

	Serial.println("Configuring the Battery Service");

	//	blebas.begin();

	//	blebas.write(100);



	// Setup the Heart Rate Monitor service using

	// BLEService and BLECharacteristic classes

	Serial.println("Configuring the Heart Rate Monitor Service");

	//      setupHRM();



	// Setup the advertising packet(s)

	Serial.println("Setting up the advertising payload(s)");

	//	startAdv();

}

void loop()
{
	Serial.println("adafruit test");
	//	digitalWrite(PIN_VIBRATE, 1);
	delay(20);
	//	digitalWrite(PIN_VIBRATE, 0);
	delay(20);

	if (Serial.available() > 0) {
		// read the incoming byte:
		Serial.println("incoming byte");
		enterSerialDfu();
	}
	display.clearDisplay();
	for (i=1; i<30; i++)
	{
		display.drawPixel(i, i, WHITE);
	}

	display.display();




}









